(this.webpackJsonpportfolio=this.webpackJsonpportfolio||[]).push([[5],{44:function(e,t,a){"use strict";a.r(t);var s=a(0),o=a(38),r=a(39),i=a(18),n=a.p+"static/media/automatedCaloriesTrackerNutrientsSheet.8f06347f.jpg",l=a.p+"static/media/automatedCaloriesTrackerSpreadsheet.89b8da54.jpg",c=a(1);t.default=function(){var e=Object(c.jsxs)(s.Fragment,{children:[Object(c.jsx)("p",{children:"Automated Calories Tracker is a script I wrote in Python which uses an unofficial MyFitnessPal API to fetch macronutrients data from a user and exports it into a google spreadsheet. I co-created this spreadsheet with my girlfriend and implemented some formulas to fully automate the work each client had to do."}),Object(c.jsx)("p",{children:"I wrote this script for my girlfriend who is an Online Personal Trainer in order to improve her online services by removing the boring work each client had to do when manually inputting their data into the spreadsheet."}),Object(c.jsx)("p",{children:"In our spreadsheet this works as follows:"}),Object(c.jsxs)("ul",{className:"flex flex-col gap-4 px-8 list-disc",children:[Object(c.jsx)("li",{children:"Run the script with the username and the range of data required"}),Object(c.jsx)("li",{children:"Data is exported onto a sheet called MyFitnessPal"}),Object(c.jsx)("li",{children:"Formulas fetch that data and use it on another sheet to calculate averages"})]}),Object(c.jsx)("code",{className:"bold m-auto p-4 dark:bg-darkBgSecondary bg-gray-200 rounded-lg shadow-lg lg:w-1/2",children:"python myfitnesspal.py nuno_c11 2021/01/01 2021/01/29"}),Object(c.jsxs)("div",{className:"grid gap-8 grid-cols-1 px-4 py-4 lg:gap-12 lg:grid-cols-2",children:[Object(c.jsx)(i.a,{src:l,alt:"Macronutriens table on a google spreadsheet",dynamicClasses:"rounded-lg"}),Object(c.jsx)(i.a,{src:n,alt:"Macronutriens table on a google spreadsheet",dynamicClasses:"rounded-lg"})]})]}),t=Object(c.jsxs)(s.Fragment,{children:[Object(c.jsx)("p",{children:"Since I barely knew any Python at this stage the first thing I did before actually going forward with the project was to learn how the API worked and decide if it was easy enough to learn the Python skills necessary to implement the script."}),Object(c.jsx)("p",{children:"Once I understood how the API worked I started googling how to do X and Y in Python, understood the very basics of Python data structures and implemented a Minimum Viable Product(MVP) to start testing."}),Object(c.jsx)("p",{children:"Luckily the API didn't give me much troubles with installation and setup and in a few days, I was able to make this work as I wanted."})]}),a=Object(c.jsxs)(s.Fragment,{children:[Object(c.jsx)(r.a,{title:"Being friend with errors",content:"Figuring out how to work with errors from the API was cumbersome. I had to do plenty of tests to figure out  which inputs would work and restricted user input to a very specific format.",success:!0}),Object(c.jsx)(r.a,{title:"Dealing with Google auth system",content:"It wasn't very hard but definitely a challenge, being the first time I dealt with this I had to follow a short online tutorial that guided me on how to set this up. Safe to say I understood the concept but would require more work with this to fully understand how it works.",success:!0}),Object(c.jsx)(r.a,{title:"Go live by creating a SPA",content:"Putting the script online with a Single Page Application  would allow a user to have an account and run the script through a form. This requires some back-end knowledge, to safely handle sensitive data such  as user login/password and google auth token, which I have yet to learn."})]});return Object(c.jsx)(o.a,{title:"Automated Calories Tracker",overview:e,approach:t,challenges:a,githubPath:"https://github.com/Nuno111/Automated-calories-tracker"})}}}]);
//# sourceMappingURL=5.fd320213.chunk.js.map