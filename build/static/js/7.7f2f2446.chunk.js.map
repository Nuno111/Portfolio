{"version":3,"sources":["assets/ftPrintfRequirements.jpg","assets/ftPrintfUnitTest.jpg","assets/ftPrintfUnitTests.jpg","pages/FtPrintf.js"],"names":["Ft_Printf","overview","className","Image","src","ftPrintfRequirements","alt","rounded","approach","ftPrintfUnitTest","dynamicClasses","ftPrintfUnitTests","challenges","ChallengeTemplate","title","content","success","ProjectTemplate","githubPath"],"mappings":"yHAAe,MAA0B,iDCA1B,MAA0B,6CCA1B,MAA0B,8C,+BCgI1BA,UAxHG,WACjB,IAAMC,EACL,sBAAKC,UAAU,wCAAf,UACC,sBAAKA,UAAU,6CAAf,UACC,qLAMA,wPAQA,mRAUD,cAACC,EAAA,EAAD,CACCC,IAAKC,EACLC,IAAI,2BACJC,SAAS,OAKNC,EACL,eAAC,WAAD,WACC,6JAKA,sQAQA,4PAQA,sBAAKN,UAAU,4DAAf,UACC,cAACC,EAAA,EAAD,CACCC,IAAKK,EACLH,IAAI,qDACJI,eAAe,eAEhB,cAACP,EAAA,EAAD,CACCC,IAAKO,EACLL,IAAI,qDACJI,eAAe,qBAMbE,EACL,eAAC,WAAD,WACC,cAACC,EAAA,EAAD,CACCC,MAAM,uCACNC,QAAQ,+YAKRC,SAAS,IAEV,cAACH,EAAA,EAAD,CACCC,MAAM,wBACNC,QAAQ,mTAMRC,SAAS,IAEV,cAACH,EAAA,EAAD,CACCC,MAAM,4BACNC,QAAQ,8bAYX,OACC,cAACE,EAAA,EAAD,CACCH,MAAM,YACNb,SAAUA,EACVO,SAAUA,EACVI,WAAYA,EACZM,WAAW","file":"static/js/7.7f2f2446.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/ftPrintfRequirements.9083de08.jpg\";","export default __webpack_public_path__ + \"static/media/ftPrintfUnitTest.90e41c33.jpg\";","export default __webpack_public_path__ + \"static/media/ftPrintfUnitTests.508f1c83.jpg\";","import { Fragment } from \"react\";\nimport ftPrintfRequirements from \"../assets/ftPrintfRequirements.jpg\";\nimport ftPrintfUnitTest from \"../assets/ftPrintfUnitTest.jpg\";\nimport ftPrintfUnitTests from \"../assets/ftPrintfUnitTests.jpg\";\nimport ProjectTemplate from \"../components/ProjectTemplate\";\nimport Image from \"../components/Image\";\nimport ChallengeTemplate from \"../components/ChallengeTemplate\";\n\nconst Ft_Printf = () => {\n\tconst overview = (\n\t\t<div className=\"grid gap-6 grid-cols-1 lg:grid-cols-2\">\n\t\t\t<div className=\"flex flex-col items-center justify-between\">\n\t\t\t\t<p>\n\t\t\t\t\tFt_printf is a project from 42 school\n\t\t\t\t\tthat requires us to create a function\n\t\t\t\t\tthat mimics the printf function which is\n\t\t\t\t\tdefined in stdio.h header file.\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\tAs seen on the image, the requirements\n\t\t\t\t\tare quite extensive, the function should\n\t\t\t\t\tbe able to handle at least 9 different\n\t\t\t\t\tconversions as well a minimum of 4\n\t\t\t\t\tflags, which can all be combined into a\n\t\t\t\t\tsingle function call.\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\tNot only that, and as per usual at 42,\n\t\t\t\t\teverything has to work perfectly (which\n\t\t\t\t\tis one of the reasons I love 42), no\n\t\t\t\t\tmemory leaks are allowed, and the\n\t\t\t\t\tbehaviour must be exactly the same as\n\t\t\t\t\tthe original printf except for undefined\n\t\t\t\t\tbehaviour.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t\t<Image\n\t\t\t\tsrc={ftPrintfRequirements}\n\t\t\t\talt=\"Requirements for project\"\n\t\t\t\trounded={true}\n\t\t\t/>\n\t\t</div>\n\t);\n\n\tconst approach = (\n\t\t<Fragment>\n\t\t\t<p>\n\t\t\t\tThe first thing I did was to understand how\n\t\t\t\twidth and precision worked by reading and\n\t\t\t\tre-reading extensively Microsoft docs.\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\tSome tests were done and I started going for\n\t\t\t\tit. Only to realise a bit later that this\n\t\t\t\twas much more complicated than I had\n\t\t\t\tanticipated, especially how width and\n\t\t\t\tprecision are dependant on each other and\n\t\t\t\tvary for each conversion.\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\tI went back to testing by running the\n\t\t\t\toriginal printf function with every single\n\t\t\t\tcombination of flags and conversions I could\n\t\t\t\tthink of in order to understand the ins and\n\t\t\t\touts of printf, before rethinking my logic\n\t\t\t\tagain.\n\t\t\t</p>\n\t\t\t<div className=\"grid gap-8 grid-cols-1 px-4 py-4 lg:gap-12 lg:grid-cols-2\">\n\t\t\t\t<Image\n\t\t\t\t\tsrc={ftPrintfUnitTest}\n\t\t\t\t\talt=\"Command line interface with code written for tests\"\n\t\t\t\t\tdynamicClasses=\"rounded-lg\"\n\t\t\t\t/>\n\t\t\t\t<Image\n\t\t\t\t\tsrc={ftPrintfUnitTests}\n\t\t\t\t\talt=\"Command line interface with code written for tests\"\n\t\t\t\t\tdynamicClasses=\"rounded-lg\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</Fragment>\n\t);\n\n\tconst challenges = (\n\t\t<Fragment>\n\t\t\t<ChallengeTemplate\n\t\t\t\ttitle=\"Dealing with flags interdependencies\"\n\t\t\t\tcontent=\"This was difficult to deal with because I created a re-usable\n\t\t\t\tfunction that dealt with precision only and another with width. The problem here\n\t\t\t\twas that they behaved differently with each other depending on the type of conversion.\n\t\t\t\tTo solve this I made these 2 functions deal only with getting precision and width values\n\t\t\t\tand then each conversion had its own logic to deal with this interdependency.\"\n\t\t\t\tsuccess={true}\n\t\t\t/>\n\t\t\t<ChallengeTemplate\n\t\t\t\ttitle=\"Negative input and me\"\n\t\t\t\tcontent=\"Both width and precision have their own rules to deal \n\t\t\t\twith negative numbers as inputs.\n\t\t\t\tMy solution for this was to add another variable to my struct \n\t\t\t\tin order to keep track if the value is negative, from there \n\t\t\t\tI had to implement different logic on each conversion and \n\t\t\t\tflag based on this bool variable.\"\n\t\t\t\tsuccess={true}\n\t\t\t/>\n\t\t\t<ChallengeTemplate\n\t\t\t\ttitle=\"Bonus part of the project\"\n\t\t\t\tcontent=\"As with most projects at 42 you have the mandatory and\n\t\t\t\tthe bonus parts for each project.\n\t\t\t\tFor this project I decided the bonus wasn't worth doing, \n\t\t\t\tI understood and solved the problems with many flags and conversions\n\t\t\t\tand felt this was enough to learn what I was supposed to with \n\t\t\t\tthis project. Doing the bonus part would just make me use the \n\t\t\t\tsame helper functions I had already created and adapt the\n\t\t\t\tlogic for each new conversion or flag.\"\n\t\t\t/>\n\t\t</Fragment>\n\t);\n\n\treturn (\n\t\t<ProjectTemplate\n\t\t\ttitle=\"Ft_printf\"\n\t\t\toverview={overview}\n\t\t\tapproach={approach}\n\t\t\tchallenges={challenges}\n\t\t\tgithubPath=\"https://github.com/Nuno111/42Lisboa-level1-ft_printf\"\n\t\t/>\n\t);\n};\n\nexport default Ft_Printf;\n"],"sourceRoot":""}